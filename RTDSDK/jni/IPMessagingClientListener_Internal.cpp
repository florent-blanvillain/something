/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_twilio_ipmessaging_impl_IPMessagingClientImpl_IPMessagingClientListenerInternal */


#include "ITMClient.h"
#include "ITMChannels.h"
#include "ITMChannel.h"
#include "ITMessages.h"
#include "ITMessage.h"
#include "ITMMembers.h"
#include "ITMMember.h"
#include "TwilioIPMessagingClientListener.h"
#include "IPMessagingClientListener_Internal.h"


#define TAG  "TwilioIPMessagingClientListenerInternalWrapper(native)"

#define LOGI(...) ((void)__android_log_print(ANDROID_LOG_INFO, TAG, __VA_ARGS__))
#define LOGW(...) ((void)__android_log_print(ANDROID_LOG_WARN, TAG, __VA_ARGS__))
#define LOGE(...) ((void)__android_log_print(ANDROID_LOG_ERROR, TAG, __VA_ARGS__))


using namespace rtd;

class TwilioIPMessagingClientListenerInternalWrapper : public ITMClientListener
{
public:
	TwilioIPMessagingClientListenerInternalWrapper(JNIEnv* env,jobject obj,jobject j_ipmessagingclient_listener, jobject j_ipmessagingclient) {
		j_ipmessagingclient_listener_ = env->NewGlobalRef(j_ipmessagingclient_listener);
		j_ipmessagingclient_ = env->NewGlobalRef(j_ipmessagingclient);
	}

	virtual ~TwilioIPMessagingClientListenerInternalWrapper() {
		if (j_ipmessagingclient_listener_ != nullptr) {
			//TODO - we should probably notify jobject that native handle is being destroyed
			env_->DeleteGlobalRef(j_ipmessagingclient_listener_);
			j_ipmessagingclient_listener_ = nullptr;
		}
		if (j_ipmessagingclient_ != nullptr) {
			env_->DeleteGlobalRef(j_ipmessagingclient_);
			j_ipmessagingclient_ = nullptr;
		}

	}
    void setTarget(void* target);

    void onMessage(TMAction action, ITMessagePtr message) {
    	LOGW("onMessage TwilioIPMessagingClientListenerInternalWrapper");
    };
    void onChannel(TMAction action, ITMChannelPtr channel) {
    	LOGW("onChannel TwilioIPMessagingClientListenerInternalWrapper");
    };
    void onMember(TMAction action, ITMMemberPtr member) {
    	LOGW("onMember TwilioIPMessagingClientListenerInternalWrapper");
    };
    void onError(const std::string& error) {
    	LOGW("onError TwilioIPMessagingClientListenerInternalWrapper");
    };

    void onToastNotification(const std::string& channelId, const std::string& messageId) {
    	LOGW("onToastNotification TwilioIPMessagingClientListenerInternalWrapper");
    };
    void onToastSubscribed(){
    	LOGW("onToastSubscribed TwilioIPMessagingClientListenerInternalWrapper");
    };
    void onToastFailed(TNError code){
    	LOGW("onToastFailed TwilioIPMessagingClientListenerInternalWrapper");
    };

private:

    jstring stringToJString(JNIEnv * env, const std::string & nativeString) {
            return env->NewStringUTF(nativeString.c_str());
    }
    jobject j_ipmessagingclient_listener_;
    jobject j_ipmessagingclient_;
    void* m_target;
    JNIEnv* env_;
};


JNIEXPORT jlong JNICALL Java_com_twilio_ipmessaging_impl_TwilioIPMessagingClientImpl_00024IPMessagingClientListenerInternal_wrapNativeObserver
 (JNIEnv *env, jobject obj, jobject j_ipMessagingClientListener, jobject j_ipMessagingClientImpl) {
	LOGW("Creating TwilioIPMessagingClientListener");
	ITMClientListener* ipmsgClientObserverbserver = new TwilioIPMessagingClientListenerInternalWrapper(env, obj, j_ipMessagingClientListener, j_ipMessagingClientImpl);
	return reinterpret_cast<jlong> (ipmsgClientObserverbserver);
}

/*
 * Class:     com_twilio_ipmessaging_impl_IPMessagingClientImpl_IPMessagingClientListenerInternal
 * Method:    freeNativeObserver
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_twilio_ipmessaging_impl_IPMessagingClientImpl_00024IPMessagingClientListenerInternal_freeNativeObserver
  (JNIEnv *, jobject, jlong) {

}



